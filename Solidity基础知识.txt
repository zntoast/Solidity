
 关键字------------------------------------------------
 private  : 在定义该合约内部可见,不能被继承的合约调用。
 public   : 任意访问。
 internal : 可以被当前合约内部以及继承的合约调用。
 external : 只能从合约外部调用。
 view     : 标识函数只读取合约内部状态，不会更改和保持任何数据。
 pure     : 标识函数为纯代码，告诉我们这个函数不但不会往区块链写数据，它甚至不从区块链读取数据。
 constant : view的旧版本，与其等价。
  
 基本数据类型------------------------------------------------
 string : 字符串类型
 uint    : 无符号整数型,无负数 (默认uint256) uint8、uint16、uint24 至 uint256
 int     : 有符号整型，有正有负(默认int256) int8、int16、int24至 int256
 address : 地址类型 ，是一个160位的值，不允许任何算法运算。存储合约的地址
 bool    : 布尔类型，true和false
 byte    : 定长字节数组
 
 映射(Mappings)------------------------------------------------
   映射类型定义方式为mapping(_KeyType => _KeyValue)。
   映射可以被视作为以Hash table，所有可能的键会被虚拟化的创建，映射到一个类型的默认值。
在映射表中并不存储键的数据，仅仅存储它的keccak256哈希值，这个哈希值在查找时需要用到

 合约结构--------------------------------------------------
 状态变量：是永久地存储在合约存储中的值
  	uint storedData; // 状态变量

 函数 ： 是合约中代码的可执行单元
 function bid() public payable{}  // 函数

 函数修饰器: 可以用来以声明的方式改良函数语义
 modifier onlySeller(){}  // 修饰器
 function abort() public onlySeller {}

 事件 ： 是以太坊虚拟机日志工具的方便接口
 event HighestBidIncreased(address bidder,uint amount); // 事件
 
 结构类型 ： 可以将几个变量分组的自定义类型
 struct Voter{  // 结构
   uint weight ; 
 }

 枚举类型 ：可以用来创建有一定数据的值的自定义类型
   enum State{ Created , locked , Inactive} // 枚举

 Solidity数据位置momory,storage,calldata解析-----------------------------------
 memory（生存期存在于function(函数)内，超过作用域即失效,一般放在函数的返回值）;
 storage（生存期同contract(合约)一致,状态变量强制为storage）
 calldata (不可修改、非持久的函数参数存储区域，用于存储函数参数，只读，不会永久存储一个数据位置,一般放在
形参上)

 Assert,Require,Revert和Exceptions -------------------------------------------------
 函数assert 和require 可以用于检查条件，如果条件不满足则抛出异常
 assert 函数只能用于测试内部错误，并检查不变量
 应该使用require 函数来确认input或合约状态变量满足条件，或者验证调用外部合约的返回值
 revert 函数可用于标记错误并回滚当前的调用
 
 
